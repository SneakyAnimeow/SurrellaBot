/*
 * This file is generated by jOOQ.
 */
package club.anims.surrellabot.database.model.tables.records;


import club.anims.surrellabot.database.model.tables.Settings;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SettingsRecord extends UpdatableRecordImpl<SettingsRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>settings.id</code>.
     */
    public SettingsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>settings.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>settings.name</code>.
     */
    public SettingsRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>settings.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>settings.value</code>.
     */
    public SettingsRecord setValue(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>settings.value</code>.
     */
    public String getValue() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Settings.SETTINGS.ID;
    }

    @Override
    public Field<String> field2() {
        return Settings.SETTINGS.NAME;
    }

    @Override
    public Field<String> field3() {
        return Settings.SETTINGS.VALUE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getValue();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getValue();
    }

    @Override
    public SettingsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SettingsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public SettingsRecord value3(String value) {
        setValue(value);
        return this;
    }

    @Override
    public SettingsRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SettingsRecord
     */
    public SettingsRecord() {
        super(Settings.SETTINGS);
    }

    /**
     * Create a detached, initialised SettingsRecord
     */
    public SettingsRecord(Integer id, String name, String value) {
        super(Settings.SETTINGS);

        setId(id);
        setName(name);
        setValue(value);
    }

    /**
     * Create a detached, initialised SettingsRecord
     */
    public SettingsRecord(club.anims.surrellabot.database.model.tables.pojos.Settings value) {
        super(Settings.SETTINGS);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setValue(value.getValue());
        }
    }
}

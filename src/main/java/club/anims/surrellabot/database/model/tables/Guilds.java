/*
 * This file is generated by jOOQ.
 */
package club.anims.surrellabot.database.model.tables;


import club.anims.surrellabot.database.model.DefaultSchema;
import club.anims.surrellabot.database.model.Keys;
import club.anims.surrellabot.database.model.tables.records.GuildsRecord;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Guilds extends TableImpl<GuildsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>guilds</code>
     */
    public static final Guilds GUILDS = new Guilds();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GuildsRecord> getRecordType() {
        return GuildsRecord.class;
    }

    /**
     * The column <code>guilds.id</code>.
     */
    public final TableField<GuildsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>guilds.name</code>.
     */
    public final TableField<GuildsRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>guilds.guild_id</code>.
     */
    public final TableField<GuildsRecord, String> GUILD_ID = createField(DSL.name("guild_id"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>guilds.prefix</code>.
     */
    public final TableField<GuildsRecord, String> PREFIX = createField(DSL.name("prefix"), SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>guilds.log_channel_id</code>.
     */
    public final TableField<GuildsRecord, String> LOG_CHANNEL_ID = createField(DSL.name("log_channel_id"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>guilds.server_owner_discord_id</code>.
     */
    public final TableField<GuildsRecord, String> SERVER_OWNER_DISCORD_ID = createField(DSL.name("server_owner_discord_id"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>guilds.is_disabled</code>.
     */
    public final TableField<GuildsRecord, Boolean> IS_DISABLED = createField(DSL.name("is_disabled"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>guilds.date_joined</code>.
     */
    public final TableField<GuildsRecord, LocalDateTime> DATE_JOINED = createField(DSL.name("date_joined"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

    private Guilds(Name alias, Table<GuildsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Guilds(Name alias, Table<GuildsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>guilds</code> table reference
     */
    public Guilds(String alias) {
        this(DSL.name(alias), GUILDS);
    }

    /**
     * Create an aliased <code>guilds</code> table reference
     */
    public Guilds(Name alias) {
        this(alias, GUILDS);
    }

    /**
     * Create a <code>guilds</code> table reference
     */
    public Guilds() {
        this(DSL.name("guilds"), null);
    }

    public <O extends Record> Guilds(Table<O> child, ForeignKey<O, GuildsRecord> key) {
        super(child, key, GUILDS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<GuildsRecord, Integer> getIdentity() {
        return (Identity<GuildsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<GuildsRecord> getPrimaryKey() {
        return Keys.GUILDS__;
    }

    @Override
    public Guilds as(String alias) {
        return new Guilds(DSL.name(alias), this);
    }

    @Override
    public Guilds as(Name alias) {
        return new Guilds(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Guilds rename(String name) {
        return new Guilds(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Guilds rename(Name name) {
        return new Guilds(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, String, String, Boolean, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
